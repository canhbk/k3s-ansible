apiVersion: apps/v1
kind: Deployment
metadata:
  name: basic-kubernetes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basic-kubernetes
  template:
    metadata:
      labels:
        app: basic-kubernetes
    spec:
      containers:
        - image: cloudversityofficial/basic-kubernetes
          name: basic-kubernetes
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Namespace
metadata:
  name: ode
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: ode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-app
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
        - image: nginx
          name: nginx-container
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: ode
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: nginx-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: ode
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "k3s-ode.canhnv.com"
      secretName: canhnv-com-staging-tls
  rules:
    - host: k3s-ode.canhnv.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd-app
  template:
    metadata:
      labels:
        app: httpd-app
    spec:
      containers:
        - image: httpd
          name: httpd-container
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpd
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: httpd-app

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpd
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "k3s.canhnv.com"
      secretName: canhnv-com-staging-tls
  rules:
    - host: k3s.canhnv.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: httpd
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: basic-kubernetes
  name: basic-kubernetes
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: basic-kubernetes

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-kubernetes
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: basic-kubernetes
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-kubernetes-dns
  annotations:
    kubernetes.io/ingress.class: nginx-ingress
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
spec:
  ingressClassName: nginx-ingress
  rules:
    - host: 154.26.131.23.nip.io
      http:
        paths:
          - path: /cloud-versity(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: basic-kubernetes
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-kubernetes-domain
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
spec:
  ingressClassName: nginx
  rules:
    - host: vmi1376826.contaboserver.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: basic-kubernetes
                port:
                  number: 80
